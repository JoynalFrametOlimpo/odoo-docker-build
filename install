#!/bin/bash
# Config and Install Odoo Server 16.0
# Author: Joynal Framet Olimpo - march 2023

ODOO_PATH="./odoo"
ODOO_VERSION="16.0"

# Upgrade && Update
apt upgrade -y && apt get update -y

# Set local datetime
if [ -f /etc/localtime/ ]; then
  cp /usr/share/zoneinfo/America/Guayaquil /etc/localtime
fi

dt=$(date '+%d-%m-%Y--%H-%M-%S')

# Create backup environment directory
if [ ! -d ./backup-environment ]; then
    mkdir ./backup-environment
fi

# Make Backup folder for security reason
if [ -d ./odoo ]; then
     echo "(tput setaf 4)***************** There is an installation in current directory, copying to backup folder for security ********************$(tput setaf 3)"
     mv ./odoo "./backup-environment/odoo.$dt"
     rm -rf "$ODOO_PATH"
fi

if [ -e  "./.env" ]; then
    mv ./.env "./backup-environment/odoo.$dt/"
fi

# Install docker - docker-compose
. /etc/os-release
SO=$ID

echo $SO
# Install docker and docker-compose (Centos)
if [ "$SO" = "centos" ]; then
     echo "(tput setaf 4)***************** Updating System ... ************************************************$(tput setaf 3)"
     yum -y update
     echo "(tput setaf 4)***************** Instaling project dependencies ... ***************************************$(tput setaf 3)"
     yum install -y yum-utils device-mapper-persistent-data lvm2 --no-install-recommends
     yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
     echo "(tput setaf 4)***************** Instaling Docker ... ******************************************$(tput setaf 3)"
     yum install -y docker-ce
     usermod -aG docker $(whoami)
     gpasswd -a ${USER} docker
     systemctl enable docker.service
     systemctl start docker.service
     yum install -y epel-release
     echo "(tput setaf 4)*************** Instaling Python-pip ... ****************************************$(tput setaf 3)"
     yum install -y python-pip --no-install-recommends
     echo "(tput setaf 4)************** Instaling DockerCompose .... *************************************$(tput setaf 3)"
     pip install docker-compose --no-install-recommends
     echo "(tput setaf 4)************* Upgrading Python ... *********************************************$(tput setaf 3)"
     yum -y upgrade python --no-install-recommends
     docker version
     docker-compose version
     yum -y install make
fi

# Install docker and docker-compose (Debian - Ubuntu)
if [ "$SO" = "ubuntu" ]; then
apt-get install make
  if [ ! -e /usr/bin/docker ] || [ ! -e /usr/bin/docker-compose ]; then
        echo "$(tput setaf 4)***************** Updating System ....  ************************************************$(tput setaf 3)"
        apt get update -y
                if [ ! -e /usr/bin/docker ]; then
			echo "$(tput setaf 4)***************** Instaling DOCKER ... ******************************************$(tput setaf 3)"
                        snap install docker
                        groupadd docker
                        usermod -aG docker $USER
                        newgrp docker
                fi
                if [ ! -e /usr/bin/docker-compose ]; then
                        echo "$(tput setaf 4)***************** Instaling DockerCompose ... ******************************************$(tput setaf 3)"
			apt-get -y install docker-compose --no-install-recommends
                fi
  fi
fi

if [ ! -d "$ODOO_PATH/16" ]; then
    mkdir -p "$ODOO_PATH/16"
fi

# Generate odoo configuration file in new project
if [ ! -f "$ODOO_PATH/16/conf/odoo.conf" ]; then
    echo "$(tput setaf 4)***************** Creating odoo.conf inside project path ... *********************$(tput setaf 3)"
    mkdir "$ODOO_PATH/16/conf/"
    ## build odoo file
        echo "$(tput setaf 4)***************** Building odoo.conf  *********>"
        sh ./script/conf
fi

# Building Odoo Image
echo "$(tput setaf 4)***************** Building odoo image odoo:16.0 ... *********************$(tput setaf 3)"
make build


# Generate environment file
echo "$(tput setaf 4)***************** Building env .... *********************$(tput setaf 3)"
sh ./script/env


chmod +x ./entrypoint.sh ./wait-for-psql.py
chmod -R 755 "$ODOO_PATH/16/"

echo "$(tput setaf 4)****************** Up services .... *******************************$(tput setaf 3)"
make compose


chown -R $USER "$ODOO_PATH/16/"
make logs

